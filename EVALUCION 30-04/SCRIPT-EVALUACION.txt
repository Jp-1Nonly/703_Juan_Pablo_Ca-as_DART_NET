using System;

class Program
{
    static Credito credito = new Credito();

    static void Main()
    {
        int opcion = 0;

        while (opcion != 6)
        {
            Console.WriteLine("\n----------------- MENU -----------------\n");
            Console.WriteLine("1 - Registrar valor total de compras ");
            Console.WriteLine("2 - Realizar avances ");
            Console.WriteLine("3 - Pagar Crédito ");
            Console.WriteLine("4 - Consultar Cupo Crédito y Saldo por Pagar ");
            Console.WriteLine("5 - Consultar Total Puntos ");
            Console.WriteLine("6 - Salir ");
            Console.Write("Seleccione una opcion: ");
            opcion = Convert.ToInt32(Console.ReadLine());

            switch (opcion)
            {
                case 1:
                    RegistrarCompra();
                    break;
                case 2:
                    RealizarAvance();
                    break;
                case 3:
                    PagarCredito();
                    break;
                case 4:
                    ConsultarCupoYSaldo();
                    break;
                case 5:
                    ConsultarTotalPuntos();
                    break;
                case 6:
                    Console.WriteLine("\nSaliendo del programa...\n");
                    break;
                default:
                    Console.WriteLine("\nOpción no válida. Intente de nuevo.\n");
                    break;
            }
        }
    }

    static void RegistrarCompra()
    {
        Console.Write("Ingrese el valor total de la compra: ");
        double valorCompra = Convert.ToDouble(Console.ReadLine());
        credito.RegistrarVenta(valorCompra);
    }

    static void RealizarAvance()
    {
        Console.Write("Ingrese el valor del avance: ");
        double valorAvance = Convert.ToDouble(Console.ReadLine());
        credito.RealizarAvance(valorAvance);
    }

    static void PagarCredito()
    {
        Console.Write("Ingrese el valor del abono: ");
        double abono = Convert.ToDouble(Console.ReadLine());
        credito.PagarCredito(abono);
    }

    static void ConsultarCupoYSaldo()
    {
        Console.WriteLine("Cupo de crédito: {0}", credito.ConsultarCupoCredito());
        Console.WriteLine("Saldo por pagar: {0}", credito.ConsultarSaldoPorPagar());
    }

    static void ConsultarTotalPuntos()
    {
        Console.WriteLine("\nTotal de puntos acumulados: {0}", credito.ConsultarTotalPuntos());
    }
}

class Credito
{

    private double cupoCredito = 1000000;
    private double saldoPorPagar = 0;
    private double totalPuntos = 0;


    public void RegistrarVenta(double valorVenta)
    {
        if (valorVenta > 0 && valorVenta <= cupoCredito - saldoPorPagar)
        {
            saldoPorPagar += valorVenta;
            if (valorVenta >= 100000)
            {
                double puntos = valorVenta * 0.01;
                totalPuntos += puntos;
                Console.WriteLine("Se acumularon {0} puntos por esta compra.", puntos);
            }
        }
        else
        {
            Console.WriteLine("\nEl valor de la compra es superior al crédito válido o es menor o igual a 0\n");
        }
    }


    public void RealizarAvance(double valorAvance)
    {
        if (valorAvance > 0 && valorAvance <= cupoCredito - saldoPorPagar)
        {
            saldoPorPagar += valorAvance;
            Console.WriteLine("\nAvance realizado correctamente\n");
        }
        else
        {
            Console.WriteLine("\nEl valor del avance es superior al crédito disponible o es menor o igual a 0\n");
        }
    }


    public void PagarCredito(double abono)
    {
        if (abono > 0 && abono <= saldoPorPagar)
        {
            saldoPorPagar -= abono;
            Console.WriteLine("\nCrédito pagado correctamente\n");
        }
        else
        {
            Console.WriteLine("\nEl valor del abono es mayor al saldo por pagar o es menor o igual a 0\n");
        }
    }


    public double ConsultarSaldoPorPagar()
    {
        return saldoPorPagar;
    }


    public double ConsultarCupoCredito()
    {
        return cupoCredito;
    }


    public double ConsultarTotalPuntos()
    {
        return totalPuntos;
    }
}
